{"version":3,"file":"static/js/836.d51e91c6.chunk.js","mappings":"6NA+EA,EAvEmB,WAEf,OAAoCA,EAAAA,EAAAA,UAAS,IAAG,eAAzCC,EAAU,KAAEC,EAAa,KAChC,GAA4CF,EAAAA,EAAAA,WAAS,GAAM,eAApDG,EAAc,KAAEC,EAAiB,KACxC,GAA4BJ,EAAAA,EAAAA,UAAS,GAAE,eAAhCK,EAAM,KAAEC,EAAS,KACxB,GAAsCN,EAAAA,EAAAA,WAAS,GAAM,eAA9CO,EAAW,KAAEC,EAAc,KAElC,GAAuCC,EAAAA,EAAAA,KAAhCC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAY,EAAZA,cAEvBC,EAAAA,EAAAA,YAAU,WACNC,EAAUT,GAAQ,EACtB,GAAG,IAEH,IAAMS,EAAY,SAACT,EAAQU,GACbX,GAAVW,GACAH,EAAaP,GACRW,KAAKC,EACd,EAEMA,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAEZjB,EAAc,GAAD,eAAKD,IAAU,OAAKiB,KACjCd,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeW,EACnB,EAsBA,IAAME,EApBN,SAAsBC,GAClB,IAAMD,EAAQC,EAAIC,KAAI,SAACC,EAAMC,GACzB,OACI,eAAIC,UAAU,eAAc,UACxB,UAAC,KAAO,CAACC,GAAE,kBAAaH,EAAKI,IAAK,WAC9B,gBAAKC,IAAKL,EAAKM,UAAWC,IAAKP,EAAKQ,MAAON,UAAU,sBACrD,gBAAKA,UAAU,oBAAmB,SAAEF,EAAKQ,SACzC,gBAAKN,UAAU,qBAAoB,SAAEF,EAAKS,YAJhBR,EAQ1C,IAEA,OACI,eAAIC,UAAU,eAAc,SACvBL,GAGb,CAEca,CAAYjC,GAEpBkC,EAAexB,GAAQ,SAACyB,EAAA,EAAY,IAAK,KACzCC,EAAU3B,IAAYP,GAAiB,SAACmC,EAAA,EAAO,IAAK,KAE1D,OACI,iBAAKZ,UAAU,eAAc,UACxBS,EACAE,EACAhB,GACD,mBACIkB,SAAUpC,EACVqC,MAAO,CAAC,QAAYjC,EAAc,OAAS,SAC3CmB,UAAU,mCACVe,QAAS,kBAAM3B,EAAUT,EAAO,EAAC,UACjC,gBAAKqB,UAAU,QAAO,SAAC,kBAIvC,E,mHC5DA,EAbkB,WACd,OACI,iBAAKA,UAAU,cAAa,WACxB,gBAAKG,IAAKa,EAAUX,IAAI,cACxB,iBAAKL,UAAU,mBAAkB,UAAC,0BACR,kBAAK,kBAG/B,gBAAKG,IAAKc,EAAcZ,IAAI,oBAGxC,ECDA,EAVmB,SAACa,GAChB,OACI,iCACI,SAAC,EAAS,KACV,SAAC,EAAU,MAIvB,C,gFCRe,SAASC,EAAmBvB,GACzC,OCJa,SAA4BA,GACzC,GAAIwB,MAAMC,QAAQzB,GAAM,OAAO,EAAA0B,EAAA,GAAiB1B,EAClD,CDES,CAAkBA,IELZ,SAA0B2B,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgB3B,KAAQ,EAAA+B,EAAA,GAA2B/B,IGLvE,WACb,MAAM,IAAIgC,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["components/comicsList/ComicsList.js","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import {useState, useEffect} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useMarvelService from '../services/MarvelService';\r\nimport Spinner from '../../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setnewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setComicsList([...comicsList, ...newComicsList]);\r\n        setnewItemLoading(false);\r\n        setOffset(offset + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    function renderItems (arr) {\r\n        const items = arr.map((item, i) => {\r\n            return (\r\n                <li className=\"comics__item\" key={i}>\r\n                    <NavLink to={`/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button \r\n                disabled={newItemLoading} \r\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\r\n                className=\"button button__main button__long\"\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\n\r\nconst ComicsPage = (props) => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useState","comicsList","setComicsList","newItemLoading","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","className","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","avengers","avengersLogo","props","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}