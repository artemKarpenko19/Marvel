{"version":3,"file":"static/js/472.44b04b96.chunk.js","mappings":"6NAiDMA,EAAO,SAAH,GAAiB,IAAZC,EAAK,EAALA,MACJC,EAA6DD,EAA7DC,MAAOC,EAAsDF,EAAtDE,YAAaC,EAAyCH,EAAzCG,UAAWC,EAA8BJ,EAA9BI,UAAWC,EAAmBL,EAAnBK,MAAOC,EAAYN,EAAZM,SACxD,OACQ,iBAAKC,UAAU,eAAc,WAC7B,gBAAKC,IAAKJ,EAAWK,IAAKR,EAAOM,UAAU,uBAC3C,iBAAKA,UAAU,qBAAoB,WAC/B,eAAIA,UAAU,qBAAoB,SAAEN,KACpC,cAAGM,UAAU,sBAAqB,SAAEL,KACpC,cAAGK,UAAU,sBAAqB,SAAEJ,KACpC,eAAGI,UAAU,sBAAqB,UAAC,aAAWD,MAC9C,gBAAKC,UAAU,sBAAqB,SAAEF,QAE1C,SAAC,KAAO,CAACK,GAAG,UAAUH,UAAU,qBAAoB,SAAC,kBAGjE,EAEA,EAxDwB,WAEpB,IAAOI,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA0BE,EAAAA,EAAAA,UAAS,MAAK,eAAjCb,EAAK,KAAEc,EAAQ,KAEtB,GAAgDC,EAAAA,EAAAA,KAAzCC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAAWC,EAAU,EAAVA,YAElCC,EAAAA,EAAAA,YAAU,WACNC,GACJ,GAAG,IAOH,IAAMA,EAAc,WAChBF,IACAD,EAAUP,GACTW,KAAKC,EACV,EAEMA,EAAgB,SAACvB,GACnBc,EAASd,EACd,EAEMwB,EAAeP,GAAQ,SAACQ,EAAA,EAAY,IAAK,KACxCC,EAAUV,GAAU,SAACW,EAAA,EAAO,IAAK,KACjCC,EAAYZ,GAAWC,IAAUjB,EAAiC,MAAxB,SAACD,EAAI,CAACC,MAAOA,IAE7D,OACI,2BACK0B,EACAF,EACAI,IAGb,C","sources":["components/pages/SingleComicPage.js"],"sourcesContent":["import { useParams, NavLink } from 'react-router-dom';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport useMarvelService from '../services/MarvelService';\r\n\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../../spinner/Spinner';\r\nimport './singleComicPage.scss';\r\n\r\n\r\nconst SingleComicPage = () => {\r\n\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n\r\n    const {loading, error, getComics, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic()\r\n    }, []);\r\n    \r\n    \r\n\r\n   \r\n\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComics(comicId)\r\n        .then(onComicLoaded);\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);  \r\n   }\r\n\r\n   const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <div>\r\n            {spinner}\r\n            {errorMessage}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, pageCount, thumbnail, price, language} = comic;\r\n    return (\r\n            <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <NavLink to='/comics' className=\"single-comic__back\">Back to all</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SingleComicPage;\r\n"],"names":["View","comic","title","description","pageCount","thumbnail","price","language","className","src","alt","to","comicId","useParams","useState","setComic","useMarvelService","loading","error","getComics","clearError","useEffect","updateComic","then","onComicLoaded","errorMessage","ErrorMessage","spinner","Spinner","content"],"sourceRoot":""}